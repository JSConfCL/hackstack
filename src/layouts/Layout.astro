---
import { ViewTransitions } from "astro:transitions";
import "@fontsource/inter";
import "@fontsource/rock-salt";
interface Props {
  title: string;
}

const { title } = Astro.props;
---

<script>
  const animateSections = () => {
    setTimeout(
      () => {
        const main = document.getElementById("main");
        if (!main) {
          return;
        }
        const sections = main.querySelectorAll("section");
        const observer = new IntersectionObserver(
          (entries) => {
            entries.forEach((entry) => {
              if (entry.isIntersecting) {
                entry.target.classList.add("!opacity-100", "!translate-y-0");
                observer.unobserve(entry.target);
              }
            });
          },
          { threshold: 0.3 },
        );

        sections.forEach((section) => {
          observer.observe(section);
        });
      },
      import.meta.env.DEV ? 0 : 1000,
    );
  };

  document.addEventListener("astro:after-swap", () => {
    animateSections();
  });

  document.addEventListener("astro:page-load", () => {
    animateSections();
  });
</script>

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <title>{title}</title>
    <ViewTransitions />
  </head>
  <body class="flex flex-col overflow-auto scroll-smooth">
    <slot />
    <div class="bg-custom-gradient fixed top-0 bottom-0 left-0 right-0 -z-10">
    </div>
    <style is:global>
      :root {
        --accent: 136, 58, 234;
        --accent-light: 224, 204, 250;
        --accent-dark: 49, 10, 101;
        --accent-gradient: linear-gradient(
          45deg,
          rgb(var(--accent)),
          rgb(var(--accent-light)) 30%,
          white 60%
        );
      }
      html {
        background: #13151a;
      }
    </style>
  </body>
</html>
